--- navit/gui/gtk/gui_gtk_action.c.orig	2010-05-23 23:27:26.000000000 -0400
+++ navit/gui/gtk/gui_gtk_action.c	2010-05-23 23:30:10.000000000 -0400
@@ -599,7 +599,7 @@
 	ret->gui=this;
 
 	widget=gtk_ui_manager_get_widget(this->ui_manager, path);
-	GTK_WIDGET_UNSET_FLAGS (widget, GTK_CAN_FOCUS);
+	gtk_widget_set_can_focus(widget, FALSE);
 	if (widget_ret)
 		*widget_ret=widget;
 	if (! popup) {
--- navit/graphics/gtk_drawing_area/graphics_gtk_drawing_area.c.orig	2010-05-23 23:46:59.000000000 -0400
+++ navit/graphics/gtk_drawing_area/graphics_gtk_drawing_area.c	2010-05-24 00:48:46.000000000 -0400
@@ -165,7 +165,7 @@
 {
 	char data[2]={0x2,0x1};
 	gdk_gc_set_fill(gc->gc, GDK_STIPPLED);
-	gc->pixmap=gdk_bitmap_create_from_data(gc->gr->widget->window, data, 2, 2);
+	gc->pixmap=gdk_bitmap_create_from_data(gtk_widget_get_window(gc->gr->widget), data, 2, 2);
 	gdk_gc_set_stipple(gc->gc, gc->pixmap);
 }
 
@@ -183,7 +183,7 @@
 	struct graphics_gc_priv *gc=g_new(struct graphics_gc_priv, 1);
 
 	*meth=gc_methods;
-	gc->gc=gdk_gc_new(gr->widget->window);
+	gc->gc=gdk_gc_new(gtk_widget_get_window(gr->widget));
 	gc->gr=gr;
 	return gc;
 }
@@ -257,7 +257,7 @@
 	if (gr->mode == draw_mode_begin || gr->mode == draw_mode_end)
 		gdk_draw_lines(gr->drawable, gc->gc, (GdkPoint *)p, count);
 	if (gr->mode == draw_mode_end || gr->mode == draw_mode_cursor)
-		gdk_draw_lines(gr->widget->window, gc->gc, (GdkPoint *)p, count);
+		gdk_draw_lines(gtk_widget_get_window(gr->widget), gc->gc, (GdkPoint *)p, count);
 }
 
 static void
@@ -266,7 +266,7 @@
 	if (gr->mode == draw_mode_begin || gr->mode == draw_mode_end)
 		gdk_draw_polygon(gr->drawable, gc->gc, TRUE, (GdkPoint *)p, count);
 	if (gr->mode == draw_mode_end || gr->mode == draw_mode_cursor)
-		gdk_draw_polygon(gr->widget->window, gc->gc, TRUE, (GdkPoint *)p, count);
+		gdk_draw_polygon(gtk_widget_get_window(gr->widget), gc->gc, TRUE, (GdkPoint *)p, count);
 }
 
 static void
@@ -281,7 +281,7 @@
 	if (gr->mode == draw_mode_begin || gr->mode == draw_mode_end)
 		gdk_draw_arc(gr->drawable, gc->gc, FALSE, p->x-r/2, p->y-r/2, r, r, 0, 64*360);
 	if (gr->mode == draw_mode_end || gr->mode == draw_mode_cursor)
-		gdk_draw_arc(gr->widget->window, gc->gc, FALSE, p->x-r/2, p->y-r/2, r, r, 0, 64*360);
+		gdk_draw_arc(gtk_widget_get_window(gr->widget), gc->gc, FALSE, p->x-r/2, p->y-r/2, r, r, 0, 64*360);
 }
 
 static void
@@ -433,7 +433,7 @@
 	int w,h;
 	dbg(1,"draw_image_warp data=%s\n", data);
 	image = imlib_load_image(data);
-	imlib_context_set_display(gdk_x11_drawable_get_xdisplay(gr->widget->window));
+	imlib_context_set_display(gdk_x11_drawable_get_xdisplay(gtk_widget_get_window(gr->widget)));
 	imlib_context_set_colormap(gdk_x11_colormap_get_xcolormap(gtk_widget_get_colormap(gr->widget)));
 	imlib_context_set_visual(gdk_x11_visual_get_xvisual(gtk_widget_get_visual(gr->widget)));
 	imlib_context_set_drawable(gdk_x11_drawable_get_xid(gr->drawable));
@@ -541,8 +541,8 @@
 draw_restore(struct graphics_priv *gr, struct point *p, int w, int h)
 {
 	GtkWidget *widget=gr->widget;
-	gdk_draw_drawable(widget->window,
-                        widget->style->fg_gc[GTK_WIDGET_STATE(widget)],
+	gdk_draw_drawable(gtk_widget_get_window(widget),
+                        gtk_widget_get_style(widget)->fg_gc[gtk_widget_get_state(widget)],
                         gr->drawable,
                         p->x, p->y, p->x, p->y, w, h);
 
@@ -575,12 +575,12 @@
 {
 	GdkPixmap *pixmap;
 	GtkWidget *widget=gr->widget;
-	GdkGC *gc=widget->style->fg_gc[GTK_WIDGET_STATE(widget)];
+	GdkGC *gc=gtk_widget_get_style(widget)->fg_gc[gtk_widget_get_state(widget)];
 	struct graphics_priv *overlay;
 
 	if (! gr->drawable)
 		return;
-	pixmap = gdk_pixmap_new(widget->window, r->width, r->height, -1);
+	pixmap = gdk_pixmap_new(gtk_widget_get_window(widget), r->width, r->height, -1);
 	if ((gr->p.x || gr->p.y) && gr->background_gc) 
 		gdk_draw_rectangle(pixmap, gr->background_gc->gc, TRUE, 0, 0, r->width, r->height);
 	gdk_draw_drawable(pixmap, gc, gr->drawable, r->x, r->y, gr->p.x, gr->p.y, r->width, r->height);
@@ -589,7 +589,7 @@
 		overlay_draw(gr,overlay,r,pixmap,gc);
 		overlay=overlay->next;
 	}
-	gdk_draw_drawable(widget->window, gc, pixmap, 0, 0, r->x, r->y, r->width, r->height);
+	gdk_draw_drawable(gtk_widget_get_window(widget), gc, pixmap, 0, 0, r->x, r->y, r->width, r->height);
 	g_object_unref(pixmap);
 }
 
@@ -634,6 +634,7 @@
 static gint
 configure(GtkWidget * widget, GdkEventConfigure * event, gpointer user_data)
 {
+	GtkAllocation widget_allocation;
 	struct graphics_priv *gra=user_data;
 	if (! gra->visible)
 		return TRUE;
@@ -645,11 +646,12 @@
 	       gra->background_ready = 0;
 	}
 #ifndef _WIN32
-	dbg(1,"window=%d\n", GDK_WINDOW_XID(widget->window));
+	dbg(1,"window=%d\n", GDK_WINDOW_XID(gtk_widget_get_window(widget)));
 #endif
-	gra->width=widget->allocation.width;
-	gra->height=widget->allocation.height;
-        gra->drawable = gdk_pixmap_new(widget->window, gra->width, gra->height, -1);
+	gtk_widget_get_allocation(widget, &widget_allocation);
+	gra->width=widget_allocation.width;
+	gra->height=widget_allocation.height;
+        gra->drawable = gdk_pixmap_new(gtk_widget_get_window(widget), gra->width, gra->height, -1);
 	callback_list_call_attr_2(gra->cbl, attr_resize, GINT_TO_POINTER(gra->width), GINT_TO_POINTER(gra->height));
 	return TRUE;
 }
@@ -911,8 +913,8 @@
 		g_object_unref(this->drawable);
 		g_object_unref(this->background);
 
-		this->drawable=gdk_pixmap_new(this->parent->widget->window, w2, h2, -1);
-		this->background=gdk_pixmap_new(this->parent->widget->window, w2, h2, -1);
+		this->drawable=gdk_pixmap_new(gtk_widget_get_window(this->parent->widget), w2, h2, -1);
+		this->background=gdk_pixmap_new(gtk_widget_get_window(this->parent->widget), w2, h2, -1);
 
 		if ((w == 0) || (h == 0)) {
 			this->overlay_autodisabled = 1;
@@ -943,7 +945,7 @@
 	else
 		gtk_container_add(GTK_CONTAINER(this->win), this->widget);
 	gtk_widget_show_all(this->win);
-	GTK_WIDGET_SET_FLAGS (this->widget, GTK_CAN_FOCUS);
+	gtk_widget_set_can_focus(this->widget, TRUE);
        	gtk_widget_set_sensitive(this->widget, TRUE);
 	gtk_widget_grab_focus(this->widget);
 	g_signal_connect(G_OBJECT(this->widget), "key-press-event", G_CALLBACK(keypress), this);
@@ -989,8 +991,8 @@
 		w2 = w;
 	}
 
-	this->background=gdk_pixmap_new(gr->widget->window, w2, h2, -1);
-	this->drawable=gdk_pixmap_new(gr->widget->window, w2, h2, -1);
+	this->background=gdk_pixmap_new(gtk_widget_get_window(gr->widget), w2, h2, -1);
+	this->drawable=gdk_pixmap_new(gtk_widget_get_window(gr->widget), w2, h2, -1);
 
 	if ((w == 0) || (h == 0)) {
 		this->overlay_autodisabled = 1;
@@ -1042,7 +1044,7 @@
 		return this->widget;
 #ifndef _WIN32
 	if (!strcmp(type,"xwindow_id"))
-		return (void *)GDK_WINDOW_XID(this->widget->window);
+		return (void *)GDK_WINDOW_XID(gtk_widget_get_window(this->widget));
 #endif
 	if (!strcmp(type,"window")) {
 		char *cp = getenv("NAVIT_XID");
--- navit/gui/gtk/gui_gtk_statusbar.c.orig	2010-05-24 01:19:24.000000000 -0400
+++ navit/gui/gtk/gui_gtk_statusbar.c	2010-05-24 01:20:31.000000000 -0400
@@ -166,7 +166,7 @@
 	gtk_box_pack_start(GTK_BOX(this->hbox), this->gps, TRUE, TRUE, 2);
 	gtk_box_pack_start(GTK_BOX(this->hbox), gtk_vseparator_new(), TRUE, TRUE, 2);
 	gtk_box_pack_start(GTK_BOX(this->hbox), this->route, TRUE, TRUE, 2);
-	GTK_WIDGET_UNSET_FLAGS (this->hbox, GTK_CAN_FOCUS);
+	gtk_widget_set_can_focus(this->hbox, FALSE);
 
 	gtk_box_pack_end(GTK_BOX(gui->vbox), this->hbox, FALSE, FALSE, 0);
 	gtk_widget_show_all(this->hbox);
--- navit/gui/gtk/gui_gtk_window.c.orig	2010-05-23 23:31:46.000000000 -0400
+++ navit/gui/gtk/gui_gtk_window.c	2010-05-23 23:43:08.000000000 -0400
@@ -209,7 +209,7 @@
 	graphics=graphics_get_data(gra, "gtk_widget");
 	if (! graphics)
 		return 1;
-	GTK_WIDGET_SET_FLAGS (graphics, GTK_CAN_FOCUS);
+	gtk_widget_set_can_focus(graphics, TRUE);
 	gtk_widget_set_sensitive(graphics, TRUE);
 	g_signal_connect(G_OBJECT(graphics), "key-press-event", G_CALLBACK(keypress), this);
 	gtk_box_pack_end(GTK_BOX(this->vbox), graphics, TRUE, TRUE, 0);
@@ -253,7 +253,7 @@
 	gtk_box_pack_start(GTK_BOX(hbox), button_cancel, TRUE, TRUE, 10);
 	gtk_box_pack_start(GTK_BOX(vbox), hbox, TRUE, TRUE, 10);
 	gtk_widget_show_all(gui->dialog_win);
-	GTK_WIDGET_SET_FLAGS (button_ok, GTK_CAN_DEFAULT);
+	gtk_widget_set_can_default(button_ok, TRUE);
 	gtk_widget_grab_default(button_ok);
 	g_signal_connect_swapped (G_OBJECT (button_cancel), "clicked", G_CALLBACK (gtk_widget_destroy), G_OBJECT (gui->dialog_win));
 	g_signal_connect_swapped (G_OBJECT (gui->dialog_entry), "activate", G_CALLBACK (gui_gtk_add_bookmark_do), gui);
@@ -730,14 +730,14 @@
 	gui_gtk_ui_init(this);
 	if (this->menubar_enable) {
 		widget=gtk_ui_manager_get_widget(this->ui_manager, "/ui/MenuBar");
-		GTK_WIDGET_UNSET_FLAGS (widget, GTK_CAN_FOCUS);
+		gtk_widget_set_can_focus(widget, FALSE);
 		gtk_box_pack_start (GTK_BOX(this->vbox), widget, FALSE, FALSE, 0);
 		gtk_widget_show (widget);
 		this->menubar=widget;
 	}
 	if (this->toolbar_enable) {
 		widget=gtk_ui_manager_get_widget(this->ui_manager, "/ui/ToolBar");
-		GTK_WIDGET_UNSET_FLAGS (widget, GTK_CAN_FOCUS);
+		gtk_widget_set_can_focus(widget, FALSE);
 		gtk_box_pack_start (GTK_BOX(this->vbox), widget, FALSE, FALSE, 0);
 		gtk_widget_show (widget);
 	}
